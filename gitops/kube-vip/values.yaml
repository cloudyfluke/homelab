# Default values for kube-vip.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: ghcr.io/kube-vip/kube-vip
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.8.9"

config:
  address: "192.168.0.100"

# Check https://kube-vip.io/docs/installation/flags/
env:
  vip_arp: "true"
  lb_port: "6443"
  vip_interface: "eth0"
  vip_cidr: "32"
  dns_mode: "first"
  cp_enable: "true"
  cp_namespace: "kube-system"
  svc_enable: "true"
  svc_election: "true"
  svc_leasename: "plndr-svcs-lock"
  vip_leaderelection: "true"
  vip_leasename: "plndr-cp-lock"
  vip_leaseduration: "5"
  vip_renewdeadline: "3"
  vip_retryperiod: "1"
  prometheus_server: ":2112"

extraArgs: {}
  # Specify additional arguments to kube-vip
  # For example, to change the Prometheus HTTP server port, use the following:
  # prometheusHTTPServer: "0.0.0.0:2112"

envValueFrom: {}
  # Specify environment variables using valueFrom references (EnvVarSource)
  # For example we can use the IP address of the pod itself as a unique value for the routerID
  # bgp_routerid:
  #  fieldRef:
  #    fieldPath: status.podIP

envFrom: []
  # Specify an externally created Secret(s) or ConfigMap(s) to inject environment variables
  # For example an externally provisioned secret could contain the password for your upstream BGP router, such as
  #
  # apiVersion: v1
  # data:
  #   bgp_peers: "<address:AS:password:multihop>"
  # kind: Secret
  #   name: kube-vip
  #   namespace: kube-system
  # type: Opaque
  #
  # - secretKeyRef:
  #    name: kube-vip

extraLabels: {}
  # Specify extra labels to be added to DaemonSet (and therefore to Pods)

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# Custom namespace to override the namespace for the deployed resources.
namespaceOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "kube-vip"

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  capabilities:
    add:
      - NET_ADMIN
      - NET_RAW

volumes: []
  # Specify additional volumes
  #   - hostPath:
  #       path: /etc/rancher/k3s/k3s.yaml
  #       type: File
  #     name: kubeconfig

volumeMounts: []
  # Specify additional volume mounts
  # - mountPath: /etc/kubernetes/admin.conf
  #   name: kubeconfig

hostAliases: []
  # Specify additional host aliases
  # - hostnames:
  #     - kubernetes
  #   ip: 127.0.0.1

nodeSelector:
  node-role.kubernetes.io/control-plane: "true"

tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    operator: Exists
affinity: {}
nodeAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
    nodeSelectorTerms:
    - matchExpressions:
      - key: node-role.kubernetes.io/master
        operator: Exists
    - matchExpressions:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists

podMonitor:
  enabled: false
  labels: {}
  annotations: {}

priorityClassName: ""

